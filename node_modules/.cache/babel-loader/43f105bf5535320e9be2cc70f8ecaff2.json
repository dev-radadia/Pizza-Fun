{"ast":null,"code":"import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useRef, useCallback } from 'react';\n\nfunction useFocusGesture(_ref) {\n  let {\n    whileFocus,\n    visualElement\n  } = _ref;\n  const isFocusActive = useRef(false);\n  const {\n    animationState\n  } = visualElement;\n  const onFocus = useCallback(() => {\n    let isFocusVisible = false;\n    /**\n     * If this element doesn't match focus-visible then don't\n     * apply whileHover. But, if matches throws that focus-visible\n     * is not a valid selector then in that browser outline styles will be applied\n     * to the element by default and we want to match that behaviour with whileFocus.\n     */\n\n    try {\n      isFocusVisible = visualElement.current.matches(\":focus-visible\");\n    } catch (e) {\n      isFocusVisible = true;\n    }\n\n    if (!isFocusVisible || !animationState) return;\n    animationState.setActive(AnimationType.Focus, true);\n    isFocusActive.current = true;\n  }, [animationState]);\n  const onBlur = useCallback(() => {\n    if (!isFocusActive.current || !animationState) return;\n    animationState.setActive(AnimationType.Focus, false);\n    isFocusActive.current = false;\n  }, [animationState]);\n  useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n  useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };","map":{"version":3,"names":["AnimationType","useDomEvent","useRef","useCallback","useFocusGesture","whileFocus","visualElement","isFocusActive","animationState","onFocus","isFocusVisible","current","matches","e","setActive","Focus","onBlur","undefined"],"sources":["C:/Users/DEV/Downloads/Pizza Time/node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs"],"sourcesContent":["import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useRef, useCallback } from 'react';\n\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const isFocusActive = useRef(false);\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = visualElement.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, true);\n        isFocusActive.current = true;\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        if (!isFocusActive.current || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, false);\n        isFocusActive.current = false;\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,2BAA9B;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,OAApC;;AAEA,SAASC,eAAT,OAAyD;EAAA,IAAhC;IAAEC,UAAF;IAAcC;EAAd,CAAgC;EACrD,MAAMC,aAAa,GAAGL,MAAM,CAAC,KAAD,CAA5B;EACA,MAAM;IAAEM;EAAF,IAAqBF,aAA3B;EACA,MAAMG,OAAO,GAAGN,WAAW,CAAC,MAAM;IAC9B,IAAIO,cAAc,GAAG,KAArB;IACA;AACR;AACA;AACA;AACA;AACA;;IACQ,IAAI;MACAA,cAAc,GAAGJ,aAAa,CAACK,OAAd,CAAsBC,OAAtB,CAA8B,gBAA9B,CAAjB;IACH,CAFD,CAGA,OAAOC,CAAP,EAAU;MACNH,cAAc,GAAG,IAAjB;IACH;;IACD,IAAI,CAACA,cAAD,IAAmB,CAACF,cAAxB,EACI;IACJA,cAAc,CAACM,SAAf,CAAyBd,aAAa,CAACe,KAAvC,EAA8C,IAA9C;IACAR,aAAa,CAACI,OAAd,GAAwB,IAAxB;EACH,CAlB0B,EAkBxB,CAACH,cAAD,CAlBwB,CAA3B;EAmBA,MAAMQ,MAAM,GAAGb,WAAW,CAAC,MAAM;IAC7B,IAAI,CAACI,aAAa,CAACI,OAAf,IAA0B,CAACH,cAA/B,EACI;IACJA,cAAc,CAACM,SAAf,CAAyBd,aAAa,CAACe,KAAvC,EAA8C,KAA9C;IACAR,aAAa,CAACI,OAAd,GAAwB,KAAxB;EACH,CALyB,EAKvB,CAACH,cAAD,CALuB,CAA1B;EAMAP,WAAW,CAACK,aAAD,EAAgB,OAAhB,EAAyBD,UAAU,GAAGI,OAAH,GAAaQ,SAAhD,CAAX;EACAhB,WAAW,CAACK,aAAD,EAAgB,MAAhB,EAAwBD,UAAU,GAAGW,MAAH,GAAYC,SAA9C,CAAX;AACH;;AAED,SAASb,eAAT"},"metadata":{},"sourceType":"module"}