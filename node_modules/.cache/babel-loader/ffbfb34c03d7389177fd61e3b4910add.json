{"ast":null,"code":"import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n  const isTargetAnimatable = isAnimatable(valueName, target);\n  let origin = transition.from !== undefined ? transition.from : value.get();\n\n  if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n    /**\n     * If we're trying to animate from \"none\", try and get an animatable version\n     * of the target. This could be improved to work both ways.\n     */\n    origin = getAnimatableNone(valueName, target);\n  } else if (isZero(origin) && typeof target === \"string\") {\n    origin = getZeroUnit(target);\n  } else if (!Array.isArray(target) && isZero(target) && typeof origin === \"string\") {\n    target = getZeroUnit(origin);\n  }\n  /**\n   * If the target has been defined as a series of keyframes\n   */\n\n\n  if (Array.isArray(target)) {\n    /**\n     * Ensure an initial wildcard keyframe is hydrated by the origin.\n     * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n     */\n    if (target[0] === null) {\n      target[0] = origin;\n    }\n\n    return target;\n  } else {\n    return [origin, target];\n  }\n}\n\nexport { getKeyframes };","map":{"version":3,"names":["getAnimatableNone","isAnimatable","isZero","getZeroUnit","getKeyframes","value","valueName","target","transition","isTargetAnimatable","origin","from","undefined","get","Array","isArray"],"sources":["C:/Users/DEV/Downloads/Pizza Time/node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs"],"sourcesContent":["import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,kDAAlC;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,mBAApC;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,MAAxC,EAAgDC,UAAhD,EAA4D;EACxD,MAAMC,kBAAkB,GAAGR,YAAY,CAACK,SAAD,EAAYC,MAAZ,CAAvC;EACA,IAAIG,MAAM,GAAGF,UAAU,CAACG,IAAX,KAAoBC,SAApB,GAAgCJ,UAAU,CAACG,IAA3C,GAAkDN,KAAK,CAACQ,GAAN,EAA/D;;EACA,IAAIH,MAAM,KAAK,MAAX,IAAqBD,kBAArB,IAA2C,OAAOF,MAAP,KAAkB,QAAjE,EAA2E;IACvE;AACR;AACA;AACA;IACQG,MAAM,GAAGV,iBAAiB,CAACM,SAAD,EAAYC,MAAZ,CAA1B;EACH,CAND,MAOK,IAAIL,MAAM,CAACQ,MAAD,CAAN,IAAkB,OAAOH,MAAP,KAAkB,QAAxC,EAAkD;IACnDG,MAAM,GAAGP,WAAW,CAACI,MAAD,CAApB;EACH,CAFI,MAGA,IAAI,CAACO,KAAK,CAACC,OAAN,CAAcR,MAAd,CAAD,IACLL,MAAM,CAACK,MAAD,CADD,IAEL,OAAOG,MAAP,KAAkB,QAFjB,EAE2B;IAC5BH,MAAM,GAAGJ,WAAW,CAACO,MAAD,CAApB;EACH;EACD;AACJ;AACA;;;EACI,IAAII,KAAK,CAACC,OAAN,CAAcR,MAAd,CAAJ,EAA2B;IACvB;AACR;AACA;AACA;IACQ,IAAIA,MAAM,CAAC,CAAD,CAAN,KAAc,IAAlB,EAAwB;MACpBA,MAAM,CAAC,CAAD,CAAN,GAAYG,MAAZ;IACH;;IACD,OAAOH,MAAP;EACH,CATD,MAUK;IACD,OAAO,CAACG,MAAD,EAASH,MAAT,CAAP;EACH;AACJ;;AAED,SAASH,YAAT"},"metadata":{},"sourceType":"module"}