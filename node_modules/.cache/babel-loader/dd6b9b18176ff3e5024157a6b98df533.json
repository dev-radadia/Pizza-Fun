{"ast":null,"code":"import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { addDomEvent, useDomEvent } from '../events/use-dom-event.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n  if (!handler) return;\n  const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n  handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\n/**\n * @param handlers -\n * @internal\n */\n\n\nfunction useTapGesture(_ref) {\n  let {\n    onTap,\n    onTapStart,\n    onTapCancel,\n    whileTap,\n    visualElement,\n    ...props\n  } = _ref;\n  const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n  const isPressing = useRef(false);\n  const cancelPointerEndListeners = useRef(null);\n  /**\n   * Only set listener to passive if there are no external listeners.\n   */\n\n  const eventOptions = {\n    passive: !(onTapStart || onTap || onTapCancel || props[\"onPointerDown\"])\n  };\n\n  function removePointerEndListener() {\n    cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n    cancelPointerEndListeners.current = null;\n  }\n\n  function checkPointerEnd() {\n    removePointerEndListener();\n    isPressing.current = false;\n    const latestProps = visualElement.getProps();\n\n    if (latestProps.whileTap && visualElement.animationState) {\n      visualElement.animationState.setActive(AnimationType.Tap, false);\n    }\n\n    return !isDragActive();\n  }\n\n  function onPointerUp(event, info) {\n    var _a, _b, _c, _d;\n\n    if (!checkPointerEnd()) return;\n    /**\n     * We only count this as a tap gesture if the event.target is the same\n     * as, or a child of, this component's element\n     */\n\n    !isNodeOrChild(visualElement.current, event.target) ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info) : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n  }\n\n  function onPointerCancel(event, info) {\n    var _a, _b;\n\n    if (!checkPointerEnd()) return;\n    (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n  }\n\n  function onPointerStart(event, info) {\n    var _a;\n\n    const latestProps = visualElement.getProps();\n    /**\n     * Ensure we trigger animations before firing event callback\n     */\n\n    if (latestProps.whileTap && visualElement.animationState) {\n      visualElement.animationState.setActive(AnimationType.Tap, true);\n    }\n\n    (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n  }\n\n  const callbackDependencies = [Boolean(onTapStart), Boolean(onTap), Boolean(whileTap), visualElement];\n  const startPress = useCallback((event, info) => {\n    removePointerEndListener();\n    if (isPressing.current) return;\n    isPressing.current = true;\n    cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n    onPointerStart(event, info);\n  }, callbackDependencies);\n  usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n  const startAccessiblePress = useCallback(() => {\n    const stopKeydownListener = addDomEvent(visualElement.current, \"keydown\", event => {\n      if (event.key !== \"Enter\" || isPressing.current) return;\n      isPressing.current = true;\n      cancelPointerEndListeners.current = addDomEvent(visualElement.current, \"keyup\", () => {\n        if (event.key !== \"Enter\" || !checkPointerEnd()) return;\n        fireSyntheticPointerEvent(\"up\", visualElement.getProps().onTap);\n      }, eventOptions);\n      fireSyntheticPointerEvent(\"down\", onPointerStart);\n    });\n    const stopBlurListener = addDomEvent(visualElement.current, \"blur\", () => {\n      stopKeydownListener();\n      stopBlurListener();\n\n      if (isPressing.current) {\n        fireSyntheticPointerEvent(\"cancel\", onPointerCancel);\n      }\n    });\n  }, callbackDependencies);\n  useDomEvent(visualElement, \"focus\", hasPressListeners ? startAccessiblePress : undefined);\n  useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };","map":{"version":3,"names":["useRef","useCallback","isNodeOrChild","addPointerEvent","usePointerEvent","useUnmountEffect","AnimationType","isDragActive","pipe","addDomEvent","useDomEvent","extractEventInfo","fireSyntheticPointerEvent","name","handler","syntheticPointerEvent","PointerEvent","useTapGesture","onTap","onTapStart","onTapCancel","whileTap","visualElement","props","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","passive","removePointerEndListener","current","checkPointerEnd","latestProps","getProps","animationState","setActive","Tap","onPointerUp","event","info","_a","_b","_c","_d","target","call","onPointerCancel","onPointerStart","callbackDependencies","Boolean","startPress","window","undefined","startAccessiblePress","stopKeydownListener","key","stopBlurListener"],"sources":["C:/Users/DEV/Downloads/Pizza Time/node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs"],"sourcesContent":["import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { addDomEvent, useDomEvent } from '../events/use-dom-event.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    function onPointerStart(event, info) {\n        var _a;\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }\n    const callbackDependencies = [\n        Boolean(onTapStart),\n        Boolean(onTap),\n        Boolean(whileTap),\n        visualElement,\n    ];\n    const startPress = useCallback((event, info) => {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        onPointerStart(event, info);\n    }, callbackDependencies);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    const startAccessiblePress = useCallback(() => {\n        const stopKeydownListener = addDomEvent(visualElement.current, \"keydown\", (event) => {\n            if (event.key !== \"Enter\" || isPressing.current)\n                return;\n            isPressing.current = true;\n            cancelPointerEndListeners.current = addDomEvent(visualElement.current, \"keyup\", () => {\n                if (event.key !== \"Enter\" || !checkPointerEnd())\n                    return;\n                fireSyntheticPointerEvent(\"up\", visualElement.getProps().onTap);\n            }, eventOptions);\n            fireSyntheticPointerEvent(\"down\", onPointerStart);\n        });\n        const stopBlurListener = addDomEvent(visualElement.current, \"blur\", () => {\n            stopKeydownListener();\n            stopBlurListener();\n            if (isPressing.current) {\n                fireSyntheticPointerEvent(\"cancel\", onPointerCancel);\n            }\n        });\n    }, callbackDependencies);\n    useDomEvent(visualElement, \"focus\", hasPressListeners ? startAccessiblePress : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,OAApC;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,iCAAjD;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,6BAAzC;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;AAEA,SAASC,yBAAT,CAAmCC,IAAnC,EAAyCC,OAAzC,EAAkD;EAC9C,IAAI,CAACA,OAAL,EACI;EACJ,MAAMC,qBAAqB,GAAG,IAAIC,YAAJ,CAAiB,YAAYH,IAA7B,CAA9B;EACAC,OAAO,CAACC,qBAAD,EAAwBJ,gBAAgB,CAACI,qBAAD,CAAxC,CAAP;AACH;AACD;AACA;AACA;AACA;;;AACA,SAASE,aAAT,OAA8F;EAAA,IAAvE;IAAEC,KAAF;IAASC,UAAT;IAAqBC,WAArB;IAAkCC,QAAlC;IAA4CC,aAA5C;IAA2D,GAAGC;EAA9D,CAAuE;EAC1F,MAAMC,iBAAiB,GAAGN,KAAK,IAAIC,UAAT,IAAuBC,WAAvB,IAAsCC,QAAhE;EACA,MAAMI,UAAU,GAAGzB,MAAM,CAAC,KAAD,CAAzB;EACA,MAAM0B,yBAAyB,GAAG1B,MAAM,CAAC,IAAD,CAAxC;EACA;AACJ;AACA;;EACI,MAAM2B,YAAY,GAAG;IACjBC,OAAO,EAAE,EAAET,UAAU,IACjBD,KADO,IAEPE,WAFO,IAGPG,KAAK,CAAC,eAAD,CAHA;EADQ,CAArB;;EAMA,SAASM,wBAAT,GAAoC;IAChCH,yBAAyB,CAACI,OAA1B,IAAqCJ,yBAAyB,CAACI,OAA1B,EAArC;IACAJ,yBAAyB,CAACI,OAA1B,GAAoC,IAApC;EACH;;EACD,SAASC,eAAT,GAA2B;IACvBF,wBAAwB;IACxBJ,UAAU,CAACK,OAAX,GAAqB,KAArB;IACA,MAAME,WAAW,GAAGV,aAAa,CAACW,QAAd,EAApB;;IACA,IAAID,WAAW,CAACX,QAAZ,IAAwBC,aAAa,CAACY,cAA1C,EAA0D;MACtDZ,aAAa,CAACY,cAAd,CAA6BC,SAA7B,CAAuC7B,aAAa,CAAC8B,GAArD,EAA0D,KAA1D;IACH;;IACD,OAAO,CAAC7B,YAAY,EAApB;EACH;;EACD,SAAS8B,WAAT,CAAqBC,KAArB,EAA4BC,IAA5B,EAAkC;IAC9B,IAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB;;IACA,IAAI,CAACZ,eAAe,EAApB,EACI;IACJ;AACR;AACA;AACA;;IACQ,CAAC7B,aAAa,CAACoB,aAAa,CAACQ,OAAf,EAAwBQ,KAAK,CAACM,MAA9B,CAAd,GACM,CAACH,EAAE,GAAG,CAACD,EAAE,GAAGlB,aAAa,CAACW,QAAd,EAAN,EAAgCb,WAAtC,MAAuD,IAAvD,IAA+DqB,EAAE,KAAK,KAAK,CAA3E,GAA+E,KAAK,CAApF,GAAwFA,EAAE,CAACI,IAAH,CAAQL,EAAR,EAAYF,KAAZ,EAAmBC,IAAnB,CAD9F,GAEM,CAACI,EAAE,GAAG,CAACD,EAAE,GAAGpB,aAAa,CAACW,QAAd,EAAN,EAAgCf,KAAtC,MAAiD,IAAjD,IAAyDyB,EAAE,KAAK,KAAK,CAArE,GAAyE,KAAK,CAA9E,GAAkFA,EAAE,CAACE,IAAH,CAAQH,EAAR,EAAYJ,KAAZ,EAAmBC,IAAnB,CAFxF;EAGH;;EACD,SAASO,eAAT,CAAyBR,KAAzB,EAAgCC,IAAhC,EAAsC;IAClC,IAAIC,EAAJ,EAAQC,EAAR;;IACA,IAAI,CAACV,eAAe,EAApB,EACI;IACJ,CAACU,EAAE,GAAG,CAACD,EAAE,GAAGlB,aAAa,CAACW,QAAd,EAAN,EAAgCb,WAAtC,MAAuD,IAAvD,IAA+DqB,EAAE,KAAK,KAAK,CAA3E,GAA+E,KAAK,CAApF,GAAwFA,EAAE,CAACI,IAAH,CAAQL,EAAR,EAAYF,KAAZ,EAAmBC,IAAnB,CAAxF;EACH;;EACD,SAASQ,cAAT,CAAwBT,KAAxB,EAA+BC,IAA/B,EAAqC;IACjC,IAAIC,EAAJ;;IACA,MAAMR,WAAW,GAAGV,aAAa,CAACW,QAAd,EAApB;IACA;AACR;AACA;;IACQ,IAAID,WAAW,CAACX,QAAZ,IAAwBC,aAAa,CAACY,cAA1C,EAA0D;MACtDZ,aAAa,CAACY,cAAd,CAA6BC,SAA7B,CAAuC7B,aAAa,CAAC8B,GAArD,EAA0D,IAA1D;IACH;;IACD,CAACI,EAAE,GAAGR,WAAW,CAACb,UAAlB,MAAkC,IAAlC,IAA0CqB,EAAE,KAAK,KAAK,CAAtD,GAA0D,KAAK,CAA/D,GAAmEA,EAAE,CAACK,IAAH,CAAQb,WAAR,EAAqBM,KAArB,EAA4BC,IAA5B,CAAnE;EACH;;EACD,MAAMS,oBAAoB,GAAG,CACzBC,OAAO,CAAC9B,UAAD,CADkB,EAEzB8B,OAAO,CAAC/B,KAAD,CAFkB,EAGzB+B,OAAO,CAAC5B,QAAD,CAHkB,EAIzBC,aAJyB,CAA7B;EAMA,MAAM4B,UAAU,GAAGjD,WAAW,CAAC,CAACqC,KAAD,EAAQC,IAAR,KAAiB;IAC5CV,wBAAwB;IACxB,IAAIJ,UAAU,CAACK,OAAf,EACI;IACJL,UAAU,CAACK,OAAX,GAAqB,IAArB;IACAJ,yBAAyB,CAACI,OAA1B,GAAoCtB,IAAI,CAACL,eAAe,CAACgD,MAAD,EAAS,WAAT,EAAsBd,WAAtB,EAAmCV,YAAnC,CAAhB,EAAkExB,eAAe,CAACgD,MAAD,EAAS,eAAT,EAA0BL,eAA1B,EAA2CnB,YAA3C,CAAjF,CAAxC;IACAoB,cAAc,CAACT,KAAD,EAAQC,IAAR,CAAd;EACH,CAP6B,EAO3BS,oBAP2B,CAA9B;EAQA5C,eAAe,CAACkB,aAAD,EAAgB,aAAhB,EAA+BE,iBAAiB,GAAG0B,UAAH,GAAgBE,SAAhE,EAA2EzB,YAA3E,CAAf;EACA,MAAM0B,oBAAoB,GAAGpD,WAAW,CAAC,MAAM;IAC3C,MAAMqD,mBAAmB,GAAG7C,WAAW,CAACa,aAAa,CAACQ,OAAf,EAAwB,SAAxB,EAAoCQ,KAAD,IAAW;MACjF,IAAIA,KAAK,CAACiB,GAAN,KAAc,OAAd,IAAyB9B,UAAU,CAACK,OAAxC,EACI;MACJL,UAAU,CAACK,OAAX,GAAqB,IAArB;MACAJ,yBAAyB,CAACI,OAA1B,GAAoCrB,WAAW,CAACa,aAAa,CAACQ,OAAf,EAAwB,OAAxB,EAAiC,MAAM;QAClF,IAAIQ,KAAK,CAACiB,GAAN,KAAc,OAAd,IAAyB,CAACxB,eAAe,EAA7C,EACI;QACJnB,yBAAyB,CAAC,IAAD,EAAOU,aAAa,CAACW,QAAd,GAAyBf,KAAhC,CAAzB;MACH,CAJ8C,EAI5CS,YAJ4C,CAA/C;MAKAf,yBAAyB,CAAC,MAAD,EAASmC,cAAT,CAAzB;IACH,CAVsC,CAAvC;IAWA,MAAMS,gBAAgB,GAAG/C,WAAW,CAACa,aAAa,CAACQ,OAAf,EAAwB,MAAxB,EAAgC,MAAM;MACtEwB,mBAAmB;MACnBE,gBAAgB;;MAChB,IAAI/B,UAAU,CAACK,OAAf,EAAwB;QACpBlB,yBAAyB,CAAC,QAAD,EAAWkC,eAAX,CAAzB;MACH;IACJ,CANmC,CAApC;EAOH,CAnBuC,EAmBrCE,oBAnBqC,CAAxC;EAoBAtC,WAAW,CAACY,aAAD,EAAgB,OAAhB,EAAyBE,iBAAiB,GAAG6B,oBAAH,GAA0BD,SAApE,CAAX;EACA/C,gBAAgB,CAACwB,wBAAD,CAAhB;AACH;;AAED,SAASZ,aAAT"},"metadata":{},"sourceType":"module"}