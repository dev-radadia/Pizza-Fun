{"ast":null,"code":"import { useMotionValue } from './use-motion-value.mjs';\nimport { cancelSync, sync } from '../frameloop/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n  /**\n   * Initialise the returned motion value. This remains the same between renders.\n   */\n  const value = useMotionValue(combineValues());\n  /**\n   * Create a function that will update the template motion value with the latest values.\n   * This is pre-bound so whenever a motion value updates it can schedule its\n   * execution in Framesync. If it's already been scheduled it won't be fired twice\n   * in a single frame.\n   */\n\n  const updateValue = () => value.set(combineValues());\n  /**\n   * Synchronously update the motion value with the latest values during the render.\n   * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n   */\n\n\n  updateValue();\n  /**\n   * Subscribe to all motion values found within the template. Whenever any of them change,\n   * schedule an update.\n   */\n\n  useIsomorphicLayoutEffect(() => {\n    const scheduleUpdate = () => sync.update(updateValue, false, true);\n\n    const subscriptions = values.map(v => v.on(\"change\", scheduleUpdate));\n    return () => {\n      subscriptions.forEach(unsubscribe => unsubscribe());\n      cancelSync.update(updateValue);\n    };\n  });\n  return value;\n}\n\nexport { useCombineMotionValues };","map":{"version":3,"names":["useMotionValue","cancelSync","sync","useIsomorphicLayoutEffect","useCombineMotionValues","values","combineValues","value","updateValue","set","scheduleUpdate","update","subscriptions","map","v","on","forEach","unsubscribe"],"sources":["C:/Users/DEV/Downloads/Pizza Time/node_modules/framer-motion/dist/es/value/use-combine-values.mjs"],"sourcesContent":["import { useMotionValue } from './use-motion-value.mjs';\nimport { cancelSync, sync } from '../frameloop/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => sync.update(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelSync.update(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n"],"mappings":"AAAA,SAASA,cAAT,QAA+B,wBAA/B;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,wBAAjC;AACA,SAASC,yBAAT,QAA0C,oCAA1C;;AAEA,SAASC,sBAAT,CAAgCC,MAAhC,EAAwCC,aAAxC,EAAuD;EACnD;AACJ;AACA;EACI,MAAMC,KAAK,GAAGP,cAAc,CAACM,aAAa,EAAd,CAA5B;EACA;AACJ;AACA;AACA;AACA;AACA;;EACI,MAAME,WAAW,GAAG,MAAMD,KAAK,CAACE,GAAN,CAAUH,aAAa,EAAvB,CAA1B;EACA;AACJ;AACA;AACA;;;EACIE,WAAW;EACX;AACJ;AACA;AACA;;EACIL,yBAAyB,CAAC,MAAM;IAC5B,MAAMO,cAAc,GAAG,MAAMR,IAAI,CAACS,MAAL,CAAYH,WAAZ,EAAyB,KAAzB,EAAgC,IAAhC,CAA7B;;IACA,MAAMI,aAAa,GAAGP,MAAM,CAACQ,GAAP,CAAYC,CAAD,IAAOA,CAAC,CAACC,EAAF,CAAK,QAAL,EAAeL,cAAf,CAAlB,CAAtB;IACA,OAAO,MAAM;MACTE,aAAa,CAACI,OAAd,CAAuBC,WAAD,IAAiBA,WAAW,EAAlD;MACAhB,UAAU,CAACU,MAAX,CAAkBH,WAAlB;IACH,CAHD;EAIH,CAPwB,CAAzB;EAQA,OAAOD,KAAP;AACH;;AAED,SAASH,sBAAT"},"metadata":{},"sourceType":"module"}